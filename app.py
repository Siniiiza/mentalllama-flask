from flask import Flask, request, jsonify
import openai
import os

app = Flask(__name__)
openai.api_key = os.environ.get("OPENAI_API_KEY")

system_prompt = """
–¢—ã ‚Äî MentaLLama, –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫ InsideTennis [Mental Notes].
–û—Ç–≤–µ—á–∞–π –º—è–≥–∫–æ, –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–Ω–æ, –∫–∞–∫ –º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∫–æ—É—á –≤ —Ç–µ–Ω–Ω–∏—Å–µ. 
–û–±—ä—è—Å–Ω—è–π —á–µ—Ä–µ–∑ —á—É–≤—Å—Ç–≤–∞, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ä–æ–¥–∏—Ç–µ–ª—è. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—É–¥–∏.
"""

@app.route("/", methods=["GET"])
def home():
    return "MentaLLama online ü¶ô"

@app.route("/ask", methods=["POST"])
def ask_llama():
    data = request.get_json()
    user_input = data.get("message", "")

    if not user_input:
      return jsonify({"response": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –≤–æ–ª–Ω—É–µ—Ç."})

    try:
        completion = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_input}
            ]
        )
        return jsonify({"response": completion['choices'][0]['message']['content']})
    except Exception as e:
        return jsonify({"response": f"–û—à–∏–±–∫–∞: {str(e)}"})
